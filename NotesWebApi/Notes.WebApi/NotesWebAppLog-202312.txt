2023-12-28 16:30:48.168 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-28 16:30:48.347 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-28 16:30:48.516 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-28 16:30:48.517 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-28 16:30:48.519 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-28 16:30:48.520 +03:00 [INF] Hosting environment: Development
2023-12-28 16:30:48.520 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-28 17:04:27.945 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/ - -
2023-12-28 17:04:28.016 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/ - - - 301 0 - 79.3307ms
2023-12-28 17:04:28.020 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/index.html - -
2023-12-28 17:04:28.168 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/index.html - - - 200 - text/html;charset=utf-8 149.0854ms
2023-12-28 17:04:28.226 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/swagger-ui.css - -
2023-12-28 17:04:28.226 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/swagger-ui-standalone-preset.js - -
2023-12-28 17:04:28.226 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/swagger-ui-bundle.js - -
2023-12-28 17:04:28.266 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-12-28 17:04:28.266 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-12-28 17:04:28.270 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/swagger-ui.css - - - 200 144929 text/css 43.7667ms
2023-12-28 17:04:28.270 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/swagger-ui-standalone-preset.js - - - 200 312163 application/javascript 43.7909ms
2023-12-28 17:04:28.285 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-12-28 17:04:28.287 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/swagger-ui-bundle.js - - - 200 1061536 application/javascript 60.6704ms
2023-12-28 17:04:28.436 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/favicon-32x32.png - -
2023-12-28 17:04:28.439 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-12-28 17:04:28.442 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/favicon-32x32.png - - - 200 628 image/png 5.5410ms
2023-12-28 17:04:28.501 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/swagger/v1/swagger.json - -
2023-12-28 17:04:28.638 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 137.4682ms
2023-12-28 17:04:59.198 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-28 17:04:59.310 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-28 17:04:59.357 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-28 17:04:59.552 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 186.9227ms
2023-12-28 17:04:59.555 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-28 17:04:59.577 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 400 - application/json 378.3024ms
2023-12-28 17:05:06.320 +03:00 [INF] Application is shutting down...
2023-12-29 15:58:54.021 +03:00 [INF] Executed DbCommand (71ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-29 15:58:54.229 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-29 15:58:54.470 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-29 15:58:54.472 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-29 15:58:54.475 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-29 15:58:54.490 +03:00 [INF] Hosting environment: Development
2023-12-29 15:58:54.492 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-29 16:00:25.043 +03:00 [INF] Application is shutting down...
2023-12-29 16:00:45.633 +03:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-29 16:00:45.893 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-29 16:00:46.041 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-29 16:00:46.043 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-29 16:00:46.045 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-29 16:00:46.047 +03:00 [INF] Hosting environment: Development
2023-12-29 16:00:46.049 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-29 16:00:54.690 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/index.html - -
2023-12-29 16:00:54.969 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/index.html - - - 200 - text/html;charset=utf-8 282.4431ms
2023-12-29 16:00:55.142 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/swagger-ui.css - -
2023-12-29 16:00:55.161 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-12-29 16:00:55.164 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/swagger-ui.css - - - 0 144929 text/css 21.9923ms
2023-12-29 16:00:55.557 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/swagger/v1/swagger.json - -
2023-12-29 16:00:55.626 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/favicon-32x32.png - -
2023-12-29 16:00:55.629 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-12-29 16:00:55.630 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/favicon-32x32.png - - - 200 628 image/png 3.9934ms
2023-12-29 16:00:55.739 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 181.8970ms
2023-12-29 16:08:00.600 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-29 16:08:00.850 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-29 16:08:00.924 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-29 16:08:01.268 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 334.2287ms
2023-12-29 16:08:01.271 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-29 16:08:01.321 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 400 - application/json 728.4841ms
2023-12-29 16:12:08.124 +03:00 [INF] Application is shutting down...
2023-12-29 17:21:22.722 +03:00 [INF] Executed DbCommand (99ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-29 17:21:23.010 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-29 17:21:23.179 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-29 17:21:23.180 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-29 17:21:23.182 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-29 17:21:23.183 +03:00 [INF] Hosting environment: Development
2023-12-29 17:21:23.184 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-29 17:22:22.506 +03:00 [INF] Application is shutting down...
2023-12-30 00:51:41.764 +03:00 [INF] Executed DbCommand (75ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 00:51:41.981 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 00:51:42.104 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 00:51:42.106 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 00:51:42.109 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 00:51:42.112 +03:00 [INF] Hosting environment: Development
2023-12-30 00:51:42.114 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 00:52:02.489 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2023-12-30 00:52:02.544 +03:00 [INF] CORS policy execution successful.
2023-12-30 00:52:02.562 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 75.3765ms
2023-12-30 00:52:02.634 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1.0/Note application/json 24
2023-12-30 00:52:02.642 +03:00 [INF] CORS policy execution successful.
2023-12-30 00:52:02.885 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2023-12-30 00:52:02.891 +03:00 [INF] CORS policy execution successful.
2023-12-30 00:52:06.831 +03:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 00:52:06.831 +03:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: 'System.String'.
 ---> System.Net.Http.HttpRequestException: Подключение не установлено, т.к. конечный компьютер отверг запрос на подключение. (localhost:7099)
 ---> System.Net.Sockets.SocketException (10061): Подключение не установлено, т.к. конечный компьютер отверг запрос на подключение.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|277_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(HttpRequestMessage request)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 00:52:07.026 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1.0/Note application/json 24 - 500 - application/json 4392.6119ms
2023-12-30 00:52:07.026 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 4140.8605ms
2023-12-30 01:05:34.456 +03:00 [INF] Application is shutting down...
2023-12-30 03:25:42.807 +03:00 [INF] Executed DbCommand (89ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 03:25:43.044 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 03:25:43.152 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 03:25:43.154 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 03:25:43.157 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 03:25:43.159 +03:00 [INF] Hosting environment: Development
2023-12-30 03:25:43.160 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 03:25:44.944 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/index.html - -
2023-12-30 03:25:45.177 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/index.html - - - 200 - text/html;charset=utf-8 235.3358ms
2023-12-30 03:25:45.388 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/favicon-32x32.png - -
2023-12-30 03:25:45.406 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-12-30 03:25:45.408 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/favicon-32x32.png - - - 0 628 image/png 19.9934ms
2023-12-30 03:25:45.467 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/swagger/v1/swagger.json - -
2023-12-30 03:25:45.611 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 143.7699ms
2023-12-30 03:31:28.800 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 03:31:29.069 +03:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: 'System.String'.
 ---> System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.
 ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot
   at System.Net.Security.SslStream.SendAuthResetSignal(ProtocolToken message, ExceptionDispatchInfo exception)
   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(HttpRequestMessage request)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 03:31:29.167 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 366.9688ms
2023-12-30 03:42:48.975 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2023-12-30 03:42:48.981 +03:00 [INF] CORS policy execution successful.
2023-12-30 03:42:48.985 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 10.1354ms
2023-12-30 03:42:48.989 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2023-12-30 03:42:48.992 +03:00 [INF] CORS policy execution successful.
2023-12-30 03:42:49.004 +03:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: 'System.String'.
 ---> System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.
 ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot
   at System.Net.Security.SslStream.SendAuthResetSignal(ProtocolToken message, ExceptionDispatchInfo exception)
   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(HttpRequestMessage request)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 03:42:49.021 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 32.4918ms
2023-12-30 03:42:49.028 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2023-12-30 03:42:49.030 +03:00 [INF] CORS policy execution successful.
2023-12-30 03:42:49.035 +03:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 03:42:49.039 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 10.8235ms
2023-12-30 03:47:01.649 +03:00 [INF] Application is shutting down...
2023-12-30 03:50:14.268 +03:00 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 03:50:14.905 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 03:50:15.329 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 03:50:15.358 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 03:50:15.364 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 03:50:15.366 +03:00 [INF] Hosting environment: Development
2023-12-30 03:50:15.368 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 03:51:02.231 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 03:51:02.706 +03:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: 'System.String'.
 ---> System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.
 ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot
   at System.Net.Security.SslStream.SendAuthResetSignal(ProtocolToken message, ExceptionDispatchInfo exception)
   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(HttpRequestMessage request)
   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 03:51:03.133 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 902.1591ms
2023-12-30 03:53:51.037 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 03:53:51.067 +03:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 03:53:51.104 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 67.8344ms
2023-12-30 04:16:28.431 +03:00 [INF] Executed DbCommand (89ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 04:16:28.691 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 04:16:28.842 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 04:16:28.844 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 04:16:28.849 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 04:16:28.851 +03:00 [INF] Hosting environment: Development
2023-12-30 04:16:28.852 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 04:17:05.769 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2023-12-30 04:17:05.769 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2023-12-30 04:17:05.882 +03:00 [INF] CORS policy execution successful.
2023-12-30 04:17:05.882 +03:00 [INF] CORS policy execution successful.
2023-12-30 04:17:05.904 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 140.0331ms
2023-12-30 04:17:05.904 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 139.9829ms
2023-12-30 04:17:05.907 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2023-12-30 04:17:05.908 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2023-12-30 04:17:05.934 +03:00 [INF] CORS policy execution successful.
2023-12-30 04:17:05.934 +03:00 [INF] CORS policy execution successful.
2023-12-30 04:17:06.966 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:17:06.966 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:17:07.039 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:17:07.039 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:17:07.493 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:17:07.493 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:17:07.612 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 558.3703ms
2023-12-30 04:17:07.694 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:17:07.697 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 647.0239ms
2023-12-30 04:17:07.701 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:17:07.968 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 2060.1971ms
2023-12-30 04:17:07.968 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 2060.5572ms
2023-12-30 04:17:12.428 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 04:17:12.434 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:17:12.435 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:17:12.439 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:17:12.449 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 12.7208ms
2023-12-30 04:17:12.450 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:17:12.451 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 23.0023ms
2023-12-30 04:18:21.818 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 04:18:21.821 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:18:21.823 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:18:21.826 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:18:21.829 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 3.008ms
2023-12-30 04:18:21.830 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:18:21.831 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 13.2509ms
2023-12-30 04:22:28.177 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 04:22:28.180 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:22:28.181 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:22:28.185 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:22:28.189 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 4.5148ms
2023-12-30 04:22:28.190 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:22:28.192 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 15.5319ms
2023-12-30 04:22:29.390 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 04:22:29.393 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:22:29.394 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:22:29.395 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:22:29.402 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 6.2571ms
2023-12-30 04:22:29.403 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:22:29.405 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 15.1517ms
2023-12-30 04:28:57.164 +03:00 [INF] Application is shutting down...
2023-12-30 04:37:29.759 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 04:37:30.092 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 04:37:30.268 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 04:37:30.269 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 04:37:30.272 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 04:37:30.274 +03:00 [INF] Hosting environment: Development
2023-12-30 04:37:30.275 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 04:37:30.672 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 04:37:31.361 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 04:37:31.469 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2023-12-30 04:37:31.480 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:37:31.523 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:38:34.631 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 63101.187ms
2023-12-30 04:38:34.635 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:38:34.799 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 400 - application/json 64129.9690ms
2023-12-30 04:43:24.035 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 04:43:24.310 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 04:43:24.462 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 04:43:24.462 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 04:43:24.464 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 04:43:24.466 +03:00 [INF] Hosting environment: Development
2023-12-30 04:43:24.467 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 04:46:14.045 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 04:46:14.588 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-30 04:46:14.628 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2023-12-30 04:46:14.634 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:46:14.665 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:56:18.121 +03:00 [INF] Executed DbCommand (75ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 04:56:18.341 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 04:56:18.476 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 04:56:18.478 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 04:56:18.480 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 04:56:18.481 +03:00 [INF] Hosting environment: Development
2023-12-30 04:56:18.482 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 04:58:18.140 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2023-12-30 04:58:18.140 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2023-12-30 04:58:18.208 +03:00 [INF] CORS policy execution successful.
2023-12-30 04:58:18.208 +03:00 [INF] CORS policy execution successful.
2023-12-30 04:58:18.224 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 89.5098ms
2023-12-30 04:58:18.224 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 88.0964ms
2023-12-30 04:58:18.225 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2023-12-30 04:58:18.225 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2023-12-30 04:58:18.240 +03:00 [INF] CORS policy execution successful.
2023-12-30 04:58:18.240 +03:00 [INF] CORS policy execution successful.
2023-12-30 04:58:18.722 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:58:18.722 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:58:18.766 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:58:18.766 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:58:19.007 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:58:19.007 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:58:19.065 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 288.8017ms
2023-12-30 04:58:19.067 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 296.2844ms
2023-12-30 04:58:19.068 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:58:19.070 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:58:19.199 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 973.4558ms
2023-12-30 04:58:19.199 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 973.6016ms
2023-12-30 04:58:45.178 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 04:58:45.184 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:58:45.185 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:58:45.189 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:58:45.198 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 11.201ms
2023-12-30 04:58:45.199 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:58:45.200 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 22.2743ms
2023-12-30 04:59:24.373 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 04:59:24.375 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:59:24.376 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 04:59:24.378 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 04:59:24.385 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 6.4594ms
2023-12-30 04:59:24.386 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 04:59:24.387 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 14.4366ms
2023-12-30 05:01:04.447 +03:00 [INF] Application is shutting down...
2023-12-30 05:03:17.438 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 05:03:17.710 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 05:03:17.860 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 05:03:17.861 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 05:03:17.863 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 05:03:17.864 +03:00 [INF] Hosting environment: Development
2023-12-30 05:03:17.865 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 05:03:23.024 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 05:03:23.658 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 05:03:23.687 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 05:04:35.968 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 05:09:29.892 +03:00 [INF] Executed DbCommand (71ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 05:09:30.096 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 05:09:30.194 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 05:09:30.195 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 05:09:30.199 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 05:09:30.201 +03:00 [INF] Hosting environment: Development
2023-12-30 05:09:30.204 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 05:09:34.321 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 05:09:34.828 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 05:09:34.861 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 05:09:35.120 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 05:09:35.179 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 307.5882ms
2023-12-30 05:09:35.184 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 05:09:35.340 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 1022.6289ms
2023-12-30 05:11:51.123 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 05:11:51.131 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 05:11:51.137 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 05:11:51.140 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2023-12-30 05:11:51.143 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 4.3526ms
2023-12-30 05:11:51.144 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 05:11:51.148 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 25.0258ms
2023-12-30 05:11:56.436 +03:00 [INF] Application is shutting down...
2023-12-30 05:12:08.708 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 05:12:08.994 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 05:12:09.149 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 05:12:09.149 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 05:12:09.152 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 05:12:09.153 +03:00 [INF] Hosting environment: Development
2023-12-30 05:12:09.154 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 05:12:12.012 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 05:12:12.549 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 05:12:12.573 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2023-12-30 05:15:28.850 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 05:15:29.135 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 05:15:29.306 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 05:15:29.309 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 05:15:29.312 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 05:15:29.313 +03:00 [INF] Hosting environment: Development
2023-12-30 05:15:29.314 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 05:19:10.861 +03:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-12-30 05:19:11.139 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-30 05:19:11.276 +03:00 [INF] Now listening on: https://localhost:7124
2023-12-30 05:19:11.277 +03:00 [INF] Now listening on: http://localhost:5124
2023-12-30 05:19:11.279 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-30 05:19:11.280 +03:00 [INF] Hosting environment: Development
2023-12-30 05:19:11.281 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2023-12-30 05:19:31.957 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2023-12-30 05:19:32.559 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2023-12-30 05:19:32.585 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
