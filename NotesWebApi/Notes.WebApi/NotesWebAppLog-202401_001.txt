2024-01-02 01:49:24.439 +03:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 01:49:24.731 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 01:51:58.969 +03:00 [INF] Executed DbCommand (83ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 01:51:59.196 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 01:54:13.423 +03:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 01:54:13.690 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 02:21:41.419 +03:00 [INF] Executed DbCommand (74ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 02:21:41.651 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 02:21:41.800 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 02:21:41.802 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 02:21:41.804 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 02:21:41.806 +03:00 [INF] Hosting environment: Development
2024-01-02 02:21:41.807 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 02:21:59.019 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 02:21:59.815 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 02:21:59.862 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 02:22:00.135 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 02:22:00.205 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 335.1166ms
2024-01-02 02:22:00.210 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 02:22:00.387 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 1370.1558ms
2024-01-02 02:22:09.413 +03:00 [INF] Application is shutting down...
2024-01-02 02:22:39.766 +03:00 [INF] Executed DbCommand (211ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 02:22:40.813 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 02:22:41.423 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 02:22:41.425 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 02:22:41.435 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 02:22:41.437 +03:00 [INF] Hosting environment: Development
2024-01-02 02:22:41.440 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 02:22:57.569 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 02:22:58.668 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 02:22:58.705 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 02:23:37.189 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 02:27:02.375 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 02:27:02.681 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 02:27:02.830 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 02:27:02.831 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 02:27:02.834 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 02:27:02.835 +03:00 [INF] Hosting environment: Development
2024-01-02 02:27:02.837 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 02:27:50.827 +03:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 02:27:51.103 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 02:27:51.252 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 02:27:51.252 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 02:27:51.255 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 02:27:51.256 +03:00 [INF] Hosting environment: Development
2024-01-02 02:27:51.258 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 02:27:57.863 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 02:27:58.418 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 02:27:58.444 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 02:28:38.573 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 02:29:47.723 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 109271.9104ms
2024-01-02 02:29:47.727 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 02:29:47.870 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 110007.6523ms
2024-01-02 02:35:16.673 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 02:35:16.995 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 02:35:17.204 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 02:35:17.207 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 02:35:17.210 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 02:35:17.211 +03:00 [INF] Hosting environment: Development
2024-01-02 02:35:17.212 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 02:35:17.390 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 02:35:18.100 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 02:35:18.133 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 02:38:03.139 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 02:38:54.572 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 216432.0927ms
2024-01-02 02:38:54.576 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 02:38:54.709 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 217322.6614ms
2024-01-02 03:20:29.664 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 03:20:29.970 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 03:20:30.157 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 03:20:30.158 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 03:20:30.161 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 03:20:30.162 +03:00 [INF] Hosting environment: Development
2024-01-02 03:20:30.163 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 03:21:15.113 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 03:21:15.737 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-01-02 03:21:15.803 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-02 03:21:15.810 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-02 03:21:15.814 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-02 03:21:15.824 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-02 03:21:15.833 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 401 0 - 721.1143ms
2024-01-02 03:21:25.875 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-02 03:21:25.875 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-02 03:21:25.880 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:21:25.880 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:21:25.887 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 11.2482ms
2024-01-02 03:21:25.887 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 11.2546ms
2024-01-02 03:21:25.895 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-02 03:21:25.896 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-02 03:21:25.897 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:21:25.897 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:21:25.927 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:21:25.927 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:21:25.956 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:21:25.956 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:22:36.284 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 03:22:36.287 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:22:36.288 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:23:51.803 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 03:23:52.074 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 03:23:52.274 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 03:23:52.275 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 03:23:52.277 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 03:23:52.278 +03:00 [INF] Hosting environment: Development
2024-01-02 03:23:52.279 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 03:24:32.456 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 03:24:33.050 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:24:33.076 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:24:33.256 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 03:24:33.733 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 650.7898ms
2024-01-02 03:24:33.739 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:24:33.883 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 1428.4158ms
2024-01-02 03:24:54.277 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 03:24:54.552 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 03:24:54.704 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 03:24:54.705 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 03:24:54.708 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 03:24:54.709 +03:00 [INF] Hosting environment: Development
2024-01-02 03:24:54.710 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 03:28:08.866 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 03:28:09.128 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 03:28:09.276 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 03:28:09.277 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 03:28:09.279 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 03:28:09.280 +03:00 [INF] Hosting environment: Development
2024-01-02 03:28:09.281 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 03:29:46.965 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 03:29:47.557 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:29:47.584 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:29:47.769 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 03:39:34.141 +03:00 [INF] Executed DbCommand (79ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 03:39:34.481 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 03:39:34.729 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 03:39:34.730 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 03:39:34.732 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 03:39:34.734 +03:00 [INF] Hosting environment: Development
2024-01-02 03:39:34.735 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 03:39:36.695 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 03:39:37.307 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:39:37.335 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:39:37.527 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 03:39:41.215 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 3873.6398ms
2024-01-02 03:39:41.219 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:39:41.357 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 4663.7906ms
2024-01-02 03:41:02.488 +03:00 [INF] Executed DbCommand (71ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 03:41:02.743 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 03:41:02.863 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 03:41:02.865 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 03:41:02.868 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 03:41:02.870 +03:00 [INF] Hosting environment: Development
2024-01-02 03:41:02.871 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 03:41:21.789 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 03:41:22.362 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:41:22.400 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:41:22.655 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 03:41:23.540 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-02 03:41:23.732 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-02 03:41:23.767 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 1356.9534ms
2024-01-02 03:41:23.772 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:41:23.792 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 2006.9144ms
2024-01-02 03:42:29.661 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-02 03:42:29.661 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-02 03:42:29.669 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:42:29.669 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:42:29.673 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 12.3458ms
2024-01-02 03:42:29.673 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 12.3449ms
2024-01-02 03:42:29.682 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-02 03:42:29.682 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-02 03:42:29.684 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:42:29.684 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:42:29.689 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:42:29.689 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:42:29.692 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:42:29.693 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:42:29.697 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 03:42:29.699 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 03:42:29.712 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-02 03:42:29.712 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-02 03:42:29.715 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 19.8935ms
2024-01-02 03:42:29.715 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 18.1454ms
2024-01-02 03:42:29.717 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:42:29.718 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:42:29.720 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 37.8113ms
2024-01-02 03:42:29.721 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 39.0552ms
2024-01-02 03:42:32.883 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 03:42:32.887 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:42:32.890 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:42:32.894 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 03:42:32.897 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-02 03:42:32.898 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 4.5724ms
2024-01-02 03:42:32.899 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:42:32.901 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 17.4626ms
2024-01-02 03:42:35.540 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-02 03:42:35.543 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:42:35.545 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:42:35.547 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-02 03:42:35.551 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-02 03:42:35.553 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 6.0059ms
2024-01-02 03:42:35.554 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-02 03:42:35.557 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 16.5287ms
2024-01-02 03:45:44.896 +03:00 [INF] Application is shutting down...
2024-01-02 03:48:09.261 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 03:48:09.618 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 03:48:09.864 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 03:48:09.865 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 03:48:09.868 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 03:48:09.869 +03:00 [INF] Hosting environment: Development
2024-01-02 03:48:09.870 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 03:50:03.546 +03:00 [INF] Executed DbCommand (95ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-02 03:50:03.796 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-02 03:50:03.892 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-02 03:50:03.894 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-02 03:50:03.897 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-02 03:50:03.899 +03:00 [INF] Hosting environment: Development
2024-01-02 03:50:03.900 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-02 03:52:41.838 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-02 03:52:41.926 +03:00 [INF] CORS policy execution successful.
2024-01-02 03:52:42.585 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-02 03:52:42.655 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-02 03:52:43.491 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","$type":"CreateNoteCommand"}
2024-01-02 03:52:43.918 +03:00 [ERR] Failed executing DbCommand (17ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-02 03:52:43.983 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'Notes.Persistence.NotesDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2024-01-02 03:52:44.023 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi) in 1358.6326ms
2024-01-02 03:52:44.030 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-02 03:52:44.105 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 500 - application/json 2269.4921ms
2024-01-02 04:04:38.289 +03:00 [INF] Application is shutting down...
2024-01-06 20:24:26.972 +03:00 [INF] Executed DbCommand (161ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-06 20:24:27.813 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-06 20:24:28.575 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-06 20:24:28.583 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-06 20:24:28.597 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-06 20:24:28.606 +03:00 [INF] Hosting environment: Development
2024-01-06 20:24:28.613 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-06 20:25:09.031 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 20:25:09.890 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:25:09.930 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 918.8089ms
2024-01-06 20:25:09.930 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 20:25:09.982 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:25:10.303 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-06 20:25:10.387 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-06 20:25:10.398 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 401 0 - 467.5152ms
2024-01-06 20:25:10.430 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 20:25:10.436 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:25:10.444 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-06 20:25:10.446 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-06 20:25:10.448 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 401 0 - 18.7600ms
2024-01-06 20:31:43.474 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 20:31:43.474 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 20:31:43.482 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:31:43.482 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:31:43.485 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 15.0458ms
2024-01-06 20:31:43.485 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 15.0459ms
2024-01-06 20:31:43.492 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 20:31:43.492 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 20:31:43.496 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:31:43.496 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:31:44.057 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:31:44.057 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:31:44.103 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 20:31:44.103 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 20:31:44.340 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 20:31:44.340 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 20:31:53.436 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 20:31:53.436 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 20:31:53.439 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:31:53.439 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:31:53.440 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 4.6331ms
2024-01-06 20:31:53.441 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 5.2085ms
2024-01-06 20:31:53.449 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 20:31:53.450 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 20:31:53.450 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:31:53.451 +03:00 [INF] CORS policy execution successful.
2024-01-06 20:31:53.453 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:31:53.454 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:31:53.455 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 20:31:53.456 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 20:31:53.462 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 20:31:53.462 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 20:31:58.645 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 14532.153ms
2024-01-06 20:31:58.645 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 14530.3295ms
2024-01-06 20:31:58.645 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 5178.194ms
2024-01-06 20:31:58.645 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 5179.8794ms
2024-01-06 20:31:58.649 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:31:58.649 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:31:58.650 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:31:58.651 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:31:58.851 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 5400.6273ms
2024-01-06 20:31:58.851 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 15358.9277ms
2024-01-06 20:31:58.851 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 5401.9046ms
2024-01-06 20:31:58.851 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 500 - application/json 15358.8866ms
2024-01-06 20:32:31.356 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-06 20:32:31.359 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:32:31.362 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 20:32:31.365 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 20:32:36.600 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 5234.9707ms
2024-01-06 20:32:36.603 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:32:36.605 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 500 - application/json 5248.7661ms
2024-01-06 20:33:56.277 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-06 20:33:56.279 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:33:56.280 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 20:33:56.281 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 20:33:57.026 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-06 20:33:57.111 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-06 20:33:57.128 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 847.193ms
2024-01-06 20:33:57.131 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 20:33:57.141 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 864.2746ms
2024-01-06 23:25:23.265 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-06 23:25:23.353 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-01-06 23:25:23.476 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-06 23:25:23.478 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-06 23:25:23.481 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-06 23:25:23.492 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-06 23:25:23.494 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 401 0 - 235.0999ms
2024-01-06 23:25:29.001 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 23:25:29.001 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 23:25:29.004 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:25:29.005 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:25:29.006 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 5.3087ms
2024-01-06 23:25:29.007 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 5.6707ms
2024-01-06 23:25:29.019 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 23:25:29.020 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:25:29.020 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 23:25:29.023 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:25:29.023 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-01-06 23:25:29.025 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-01-06 23:25:29.026 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-06 23:25:29.029 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-06 23:25:29.030 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-06 23:25:29.032 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-06 23:25:29.035 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-06 23:25:29.037 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-06 23:25:29.038 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-06 23:25:29.039 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-06 23:25:29.040 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 401 0 - 21.0660ms
2024-01-06 23:25:29.041 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 401 0 - 20.7292ms
2024-01-06 23:25:49.964 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-06 23:25:49.969 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-01-06 23:25:49.972 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-06 23:25:49.975 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-06 23:25:49.978 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-06 23:25:49.979 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-06 23:25:49.980 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 401 0 - 16.6777ms
2024-01-06 23:25:59.577 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 23:25:59.577 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-06 23:25:59.578 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:25:59.579 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:25:59.580 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 3.1925ms
2024-01-06 23:25:59.581 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 4.0693ms
2024-01-06 23:25:59.591 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 23:25:59.593 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-06 23:25:59.593 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:25:59.594 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:25:59.596 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 23:25:59.596 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 23:25:59.605 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 23:25:59.605 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 23:25:59.617 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 23:25:59.617 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 23:25:59.876 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-06 23:25:59.876 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-06 23:25:59.897 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-06 23:25:59.897 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-06 23:25:59.900 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 290.6833ms
2024-01-06 23:25:59.900 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 292.0583ms
2024-01-06 23:25:59.902 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 23:25:59.904 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 23:25:59.905 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 312.9735ms
2024-01-06 23:25:59.906 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 314.6243ms
2024-01-06 23:26:19.869 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-06 23:26:19.871 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 23:26:19.872 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 23:26:19.874 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 23:26:19.904 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-06 23:26:19.905 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 31.3369ms
2024-01-06 23:26:19.907 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 23:26:19.910 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 40.7853ms
2024-01-06 23:28:11.611 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-06 23:28:11.614 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:28:11.615 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-06 23:28:11.668 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 23:28:11.902 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","$type":"CreateNoteCommand"}
2024-01-06 23:28:12.334 +03:00 [ERR] Failed executing DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-06 23:28:12.379 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'Notes.Persistence.NotesDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2024-01-06 23:28:12.398 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi) in 726.829ms
2024-01-06 23:28:12.401 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-06 23:28:12.403 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 500 - application/json 791.5579ms
2024-01-06 23:57:42.853 +03:00 [INF] Application is shutting down...
2024-01-06 23:57:54.916 +03:00 [INF] Executed DbCommand (150ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-06 23:57:55.488 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-06 23:57:55.837 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-06 23:57:55.839 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-06 23:57:55.845 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-06 23:57:55.847 +03:00 [INF] Hosting environment: Development
2024-01-06 23:57:55.849 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-06 23:58:33.496 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-06 23:58:34.306 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 23:58:34.345 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 23:58:34.676 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-06 23:58:35.783 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-06 23:58:36.018 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-06 23:58:36.062 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 1705.3274ms
2024-01-06 23:58:36.067 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-06 23:58:36.097 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 2603.8692ms
2024-01-06 23:58:38.436 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-06 23:58:38.447 +03:00 [INF] CORS policy execution successful.
2024-01-06 23:58:38.453 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-06 23:58:38.471 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-06 23:58:38.598 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","$type":"CreateNoteCommand"}
2024-01-06 23:58:38.990 +03:00 [ERR] Failed executing DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-06 23:58:39.064 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'Notes.Persistence.NotesDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2024-01-06 23:58:39.095 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi) in 621.6978ms
2024-01-06 23:58:39.097 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-06 23:58:39.117 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 500 - application/json 680.7071ms
2024-01-07 00:34:32.563 +03:00 [INF] Application is shutting down...
2024-01-07 00:35:13.414 +03:00 [INF] Executed DbCommand (99ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-07 00:35:13.981 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-07 00:35:14.409 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-07 00:35:14.412 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-07 00:35:14.417 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-07 00:35:14.419 +03:00 [INF] Hosting environment: Development
2024-01-07 00:35:14.423 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-07 00:52:05.837 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-07 00:52:05.988 +03:00 [INF] CORS policy execution successful.
2024-01-07 00:52:06.734 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-01-07 00:52:06.826 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-07 00:52:06.836 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-07 00:52:06.842 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-07 00:52:06.854 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-07 00:52:06.873 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 401 0 - 1042.7898ms
2024-01-07 00:53:01.867 +03:00 [INF] Executed DbCommand (119ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-07 00:53:02.197 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-07 00:53:02.398 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-07 00:53:02.399 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-07 00:53:02.401 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-07 00:53:02.402 +03:00 [INF] Hosting environment: Development
2024-01-07 00:53:02.403 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-07 00:53:03.073 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 00:53:03.975 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-01-07 00:53:04.014 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-07 00:53:04.021 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-07 00:53:04.026 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-07 00:53:04.040 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-07 00:53:04.053 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 401 0 - 986.4773ms
2024-01-07 00:53:28.243 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-07 00:53:28.247 +03:00 [INF] CORS policy execution successful.
2024-01-07 00:53:28.251 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 0 - - 7.6231ms
2024-01-07 00:53:30.098 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-07 00:53:30.101 +03:00 [INF] CORS policy execution successful.
2024-01-07 00:53:30.102 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 3.9391ms
2024-01-07 00:53:30.116 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-07 00:53:30.117 +03:00 [INF] CORS policy execution successful.
2024-01-07 00:53:30.172 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 00:53:30.228 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 00:53:30.544 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 00:53:31.459 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 00:53:31.652 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 00:53:31.688 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 1452.8502ms
2024-01-07 00:53:31.692 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 00:53:31.702 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 1586.0001ms
2024-01-07 00:53:31.948 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-07 00:53:31.950 +03:00 [INF] CORS policy execution successful.
2024-01-07 00:53:31.954 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 00:53:31.955 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 00:53:31.958 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 00:53:31.974 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 00:53:31.976 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 19.0762ms
2024-01-07 00:53:31.977 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 00:53:31.978 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 29.8769ms
2024-01-07 00:54:10.234 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 00:54:10.236 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 00:54:10.239 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 00:54:10.247 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 00:54:10.272 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 00:54:10.275 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 33.0473ms
2024-01-07 00:54:10.279 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 00:54:10.281 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 47.0963ms
2024-01-07 00:54:14.071 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-07 00:54:14.073 +03:00 [INF] CORS policy execution successful.
2024-01-07 00:54:14.076 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 00:54:14.095 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 00:54:14.231 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","$type":"CreateNoteCommand"}
2024-01-07 00:54:14.701 +03:00 [ERR] Failed executing DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-07 00:54:14.732 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'Notes.Persistence.NotesDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2024-01-07 00:54:14.759 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi) in 661.3859ms
2024-01-07 00:54:14.760 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 00:54:14.777 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 500 - application/json 705.6976ms
2024-01-07 00:56:00.412 +03:00 [INF] Application is shutting down...
2024-01-07 00:56:18.607 +03:00 [INF] Executed DbCommand (199ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-07 00:56:19.382 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-07 00:56:19.746 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-07 00:56:19.748 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-07 00:56:19.752 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-07 00:56:19.756 +03:00 [INF] Hosting environment: Development
2024-01-07 00:56:19.758 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-07 00:58:24.815 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-07 00:58:24.982 +03:00 [INF] CORS policy execution successful.
2024-01-07 00:58:26.159 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 00:58:26.207 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 00:58:26.669 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","$type":"CreateNoteCommand"}
2024-01-07 01:02:35.067 +03:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."CreationDate", n."Details", n."EditDate", n."SectionId", n."Title", n."UserId"
FROM notes AS n
2024-01-07 01:12:36.975 +03:00 [ERR] Failed executing DbCommand (21ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-07 01:12:37.096 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'Notes.Persistence.NotesDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2024-01-07 01:58:55.662 +03:00 [INF] Executed DbCommand (128ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-07 01:58:56.097 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-07 01:58:56.368 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-07 01:58:56.370 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-07 01:58:56.374 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-07 01:58:56.376 +03:00 [INF] Hosting environment: Development
2024-01-07 01:58:56.378 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-07 01:59:35.027 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-07 01:59:35.111 +03:00 [INF] CORS policy execution successful.
2024-01-07 01:59:35.922 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2024-01-07 01:59:35.995 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-07 01:59:36.008 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: 'System.DateTime', Current time: 'System.DateTime'.
2024-01-07 01:59:36.016 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-01-07 01:59:36.041 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-07 01:59:36.082 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 401 0 - 1059.1982ms
2024-01-07 01:59:50.196 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-07 01:59:50.203 +03:00 [INF] CORS policy execution successful.
2024-01-07 01:59:50.208 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 12.0633ms
2024-01-07 01:59:50.262 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-07 01:59:50.274 +03:00 [INF] CORS policy execution successful.
2024-01-07 01:59:50.353 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 01:59:50.423 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 01:59:51.114 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 01:59:52.822 +03:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 01:59:53.058 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 01:59:53.101 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 2663.672ms
2024-01-07 01:59:53.106 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 01:59:53.120 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 2858.7927ms
2024-01-07 01:59:53.126 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-07 01:59:53.127 +03:00 [INF] CORS policy execution successful.
2024-01-07 01:59:53.132 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 01:59:53.134 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 01:59:53.138 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 01:59:53.157 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 01:59:53.159 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 23.4181ms
2024-01-07 01:59:53.160 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 01:59:53.162 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 35.5890ms
2024-01-07 02:00:38.266 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 02:00:38.273 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:00:38.279 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:00:38.299 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 02:00:38.323 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 02:00:38.325 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 42.249ms
2024-01-07 02:00:38.328 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:00:38.332 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 66.3943ms
2024-01-07 02:00:54.845 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-07 02:00:54.847 +03:00 [INF] CORS policy execution successful.
2024-01-07 02:00:54.849 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 02:00:54.887 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:00:55.052 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","$type":"CreateNoteCommand"}
2024-01-07 02:00:55.686 +03:00 [ERR] Failed executing DbCommand (63ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-07 02:00:55.751 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'Notes.Persistence.NotesDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 23503
    MessageText: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: notes
    ConstraintName: FK_notes_sections_SectionId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 23503
    MessageText: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: notes
    ConstraintName: FK_notes_sections_SectionId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2024-01-07 02:00:55.810 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi) in 918.8957ms
2024-01-07 02:00:55.814 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 02:00:55.846 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 500 - application/json 1000.7230ms
2024-01-07 02:02:39.645 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-07 02:02:39.647 +03:00 [INF] CORS policy execution successful.
2024-01-07 02:02:39.649 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 02:02:39.649 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:02:39.653 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","$type":"CreateNoteCommand"}
2024-01-07 02:02:39.663 +03:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-07 02:02:39.667 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'Notes.Persistence.NotesDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 23503
    MessageText: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: notes
    ConstraintName: FK_notes_sections_SectionId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 23503
    MessageText: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: notes
    ConstraintName: FK_notes_sections_SectionId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2024-01-07 02:02:39.687 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi) in 35.1831ms
2024-01-07 02:02:39.689 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 02:02:39.692 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 500 - application/json 47.3237ms
2024-01-07 02:03:04.074 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 02:03:04.076 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:03:04.078 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:03:04.080 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 02:03:04.094 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 02:03:04.103 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 02:03:04.105 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 25.5318ms
2024-01-07 02:03:04.107 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:03:04.108 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 33.9857ms
2024-01-07 02:03:24.298 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 54
2024-01-07 02:03:24.300 +03:00 [INF] CORS policy execution successful.
2024-01-07 02:03:24.304 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 02:03:24.306 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:03:24.313 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","$type":"CreateNoteCommand"}
2024-01-07 02:03:24.324 +03:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-07 02:03:24.328 +03:00 [ERR] An exception occurred in the database while saving changes for context type 'Notes.Persistence.NotesDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 23503
    MessageText: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: notes
    ConstraintName: FK_notes_sections_SectionId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 23503
    MessageText: INSERT или UPDATE в таблице "notes" нарушает ограничение внешнего ключа "FK_notes_sections_SectionId"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: notes
    ConstraintName: FK_notes_sections_SectionId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2024-01-07 02:03:24.344 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi) in 33.7804ms
2024-01-07 02:03:24.346 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 02:03:24.348 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 54 - 500 - application/json 49.4171ms
2024-01-07 02:24:16.950 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Room application/json 23
2024-01-07 02:24:16.986 +03:00 [INF] CORS policy execution successful.
2024-01-07 02:24:17.037 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.RoomController.Create (Notes.WebApi)'
2024-01-07 02:24:17.097 +03:00 [INF] Route matched with {action = "Create", controller = "Room"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateRoomDto) on controller Notes.WebApi.Controllers.RoomController (Notes.WebApi).
2024-01-07 02:24:17.202 +03:00 [INF] Notes Request: CreateRoomCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"string","$type":"CreateRoomCommand"}
2024-01-07 02:24:17.641 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?', @p4='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO rooms ("RoomId", "CreationDate", "IsActive", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4);
2024-01-07 02:24:17.681 +03:00 [INF] Executing ObjectResult, writing value of type 'System.Guid'.
2024-01-07 02:24:17.690 +03:00 [INF] Executed action Notes.WebApi.Controllers.RoomController.Create (Notes.WebApi) in 589.8127ms
2024-01-07 02:24:17.692 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.RoomController.Create (Notes.WebApi)'
2024-01-07 02:24:17.694 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Room application/json 23 - 200 - application/json;+charset=utf-8 751.8529ms
2024-01-07 02:29:45.129 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Section application/json 100
2024-01-07 02:29:45.143 +03:00 [INF] CORS policy execution successful.
2024-01-07 02:29:45.160 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.SectionController.Create (Notes.WebApi)'
2024-01-07 02:29:45.190 +03:00 [INF] Route matched with {action = "Create", controller = "Section"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(Notes.WebApi.Models.CreateSectionDto) on controller Notes.WebApi.Controllers.SectionController (Notes.WebApi).
2024-01-07 02:29:45.280 +03:00 [INF] Notes Request: CreateSectionCommand "5457eece-211b-4752-974e-1615a7e1a153" {"Title":"lalal","Details":"lalalalal","RoomId":"71dbf5a1-25c4-4603-9215-f9c8cf42fdcb","$type":"CreateSectionCommand"}
2024-01-07 02:29:45.548 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Boolean), @p4='?' (DbType = Guid), @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO sections ("SectionId", "CreationDate", "Details", "IsActive", "RoomId", "Title")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2024-01-07 02:29:45.561 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Domain.Section'.
2024-01-07 02:29:45.644 +03:00 [INF] Executed action Notes.WebApi.Controllers.SectionController.Create (Notes.WebApi) in 450.9849ms
2024-01-07 02:29:45.646 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.SectionController.Create (Notes.WebApi)'
2024-01-07 02:29:45.648 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Section application/json 100 - 200 - application/json;+charset=utf-8 520.9967ms
2024-01-07 02:31:14.109 +03:00 [INF] Application is shutting down...
2024-01-07 02:41:06.514 +03:00 [INF] Executed DbCommand (356ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-07 02:41:07.502 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-07 02:41:08.106 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-07 02:41:08.117 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-07 02:41:08.130 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-07 02:41:08.132 +03:00 [INF] Hosting environment: Development
2024-01-07 02:41:08.133 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-07 02:44:02.668 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 02:44:03.526 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:44:03.572 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:44:03.906 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 02:44:04.930 +03:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 02:44:05.177 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 02:44:05.214 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 1631.2342ms
2024-01-07 02:44:05.220 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:44:05.246 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 2582.8334ms
2024-01-07 02:44:10.351 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7124/api/1/Note application/json 109
2024-01-07 02:44:10.358 +03:00 [INF] CORS policy execution successful.
2024-01-07 02:44:10.365 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 02:44:10.387 +03:00 [INF] Route matched with {action = "Create", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Notes.WebApi.Models.CreateNoteDto) on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:44:10.523 +03:00 [INF] Notes Request: CreateNoteCommand "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","Title":"lololo","Details":"lololokkekkeke","SectionId":"3ac7b5e0-4323-4ae8-9395-15ea05e4bce9","$type":"CreateNoteCommand"}
2024-01-07 02:44:10.945 +03:00 [INF] Executed DbCommand (26ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = DateTime), @p4='?' (DbType = Guid), @p5='?', @p6='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO notes ("NoteId", "CreationDate", "Details", "EditDate", "SectionId", "Title", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2024-01-07 02:44:10.981 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Guid'.
2024-01-07 02:44:10.990 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi) in 599.4318ms
2024-01-07 02:44:10.993 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.Create (Notes.WebApi)'
2024-01-07 02:44:10.997 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7124/api/1/Note application/json 109 - 200 - application/json;+charset=utf-8 645.6332ms
2024-01-07 02:45:16.260 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 02:45:16.265 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:45:16.266 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:45:16.270 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 02:45:16.285 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 02:45:16.286 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 17.3017ms
2024-01-07 02:45:16.287 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:45:16.289 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 28.7333ms
2024-01-07 02:47:16.954 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 02:47:16.971 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:47:16.974 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:47:16.989 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 02:47:17.215 +03:00 [INF] Executed DbCommand (31ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 02:47:17.265 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 02:47:17.268 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 292.6318ms
2024-01-07 02:47:17.269 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:47:17.271 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 318.4403ms
2024-01-07 02:52:09.258 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 02:52:09.264 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:52:09.266 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 02:52:09.268 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 02:52:09.286 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 02:52:09.301 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 02:52:09.303 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 35.0303ms
2024-01-07 02:52:09.304 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 02:52:09.305 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 47.0405ms
2024-01-07 02:53:28.156 +03:00 [INF] Application is shutting down...
2024-01-07 18:30:25.891 +03:00 [INF] Executed DbCommand (86ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-07 18:30:26.224 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-07 18:30:26.413 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-07 18:30:26.414 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-07 18:30:26.417 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-07 18:30:26.418 +03:00 [INF] Hosting environment: Development
2024-01-07 18:30:26.419 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-07 18:30:39.334 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-07 18:30:39.440 +03:00 [INF] CORS policy execution successful.
2024-01-07 18:30:39.460 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 130.0611ms
2024-01-07 18:30:39.466 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-07 18:30:39.484 +03:00 [INF] CORS policy execution successful.
2024-01-07 18:30:40.312 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 18:30:40.371 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 18:30:40.831 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 18:30:42.106 +03:00 [INF] Executed DbCommand (57ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 18:30:42.353 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 18:30:42.381 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 1998.2775ms
2024-01-07 18:30:42.387 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 18:30:42.406 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-07 18:30:42.408 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 2941.8595ms
2024-01-07 18:30:42.409 +03:00 [INF] CORS policy execution successful.
2024-01-07 18:30:42.414 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 18:30:42.417 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 18:30:42.424 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 18:30:42.456 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 18:30:42.460 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 37.5604ms
2024-01-07 18:30:42.461 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 18:30:42.462 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 56.6873ms
2024-01-07 18:31:00.169 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 18:31:00.173 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 18:31:00.174 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 18:31:00.179 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 18:31:00.188 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 18:31:00.190 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 14.149ms
2024-01-07 18:31:00.191 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 18:31:00.193 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 23.1128ms
2024-01-07 18:59:11.884 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 18:59:11.946 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 18:59:11.960 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 18:59:11.976 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 18:59:12.438 +03:00 [INF] Executed DbCommand (30ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 18:59:12.470 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 18:59:12.475 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 513.2161ms
2024-01-07 18:59:12.476 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 18:59:12.479 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 599.5778ms
2024-01-07 19:01:42.809 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 19:01:42.813 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 19:01:42.814 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 19:01:42.817 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 19:01:42.829 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 19:01:42.834 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 19:01:42.836 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 19.6321ms
2024-01-07 19:01:42.837 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 19:01:42.839 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 30.4169ms
2024-01-07 19:01:50.201 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 19:01:50.204 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 19:01:50.207 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 19:01:50.212 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 19:01:50.221 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 19:01:50.223 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 11.1372ms
2024-01-07 19:01:50.224 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 19:01:50.225 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 23.9212ms
2024-01-07 19:02:30.824 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 19:02:30.826 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 19:02:30.827 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 19:02:30.829 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 19:02:30.833 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 19:02:30.836 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 6.8828ms
2024-01-07 19:02:30.837 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 19:02:30.840 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 14.7537ms
2024-01-07 19:16:49.200 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-07 19:16:49.205 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 19:16:49.207 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-07 19:16:49.212 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-07 19:16:49.292 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-07 19:16:49.301 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-07 19:16:49.305 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 93.1811ms
2024-01-07 19:16:49.307 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-07 19:16:49.309 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 108.7412ms
2024-01-08 01:10:04.424 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - -
2024-01-08 01:10:04.449 +03:00 [INF] CORS policy execution successful.
2024-01-08 01:10:04.468 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7124/api/1.0/Note - - - 204 - - 50.2224ms
2024-01-08 01:10:04.528 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-08 01:10:04.544 +03:00 [INF] CORS policy execution successful.
2024-01-08 01:10:04.579 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:10:04.586 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:10:04.601 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:10:04.854 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:10:04.889 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:10:04.893 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 304.2702ms
2024-01-08 01:10:04.895 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:10:04.897 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 368.7298ms
2024-01-08 01:10:04.904 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1.0/Note - -
2024-01-08 01:10:04.906 +03:00 [INF] CORS policy execution successful.
2024-01-08 01:10:04.911 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:10:04.912 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:10:04.915 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:10:04.924 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:10:04.926 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 11.4212ms
2024-01-08 01:10:04.928 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:10:04.929 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1.0/Note - - - 200 - application/json;+charset=utf-8 24.7248ms
2024-01-08 01:10:42.034 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:10:42.039 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:10:42.040 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:10:42.043 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:10:42.051 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:10:42.053 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 10.8475ms
2024-01-08 01:10:42.055 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:10:42.058 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 23.0921ms
2024-01-08 01:11:04.876 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:11:04.878 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:11:04.881 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:11:04.883 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:11:04.889 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:11:04.891 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 8.0354ms
2024-01-08 01:11:04.892 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:11:04.893 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 17.4788ms
2024-01-08 01:11:58.221 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:11:58.227 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:11:58.229 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:11:58.231 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:11:58.235 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:11:58.237 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 5.9979ms
2024-01-08 01:11:58.238 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:11:58.240 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 18.7556ms
2024-01-08 01:14:55.506 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:14:55.509 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:14:55.512 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:14:55.515 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:14:55.524 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:14:55.531 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:14:55.533 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 18.2271ms
2024-01-08 01:14:55.534 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:14:55.535 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 28.9538ms
2024-01-08 01:15:55.172 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:15:55.175 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:15:55.176 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:15:55.178 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:15:55.191 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:15:55.192 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 15.2771ms
2024-01-08 01:15:55.193 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:15:55.194 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 21.8491ms
2024-01-08 01:16:44.090 +03:00 [INF] Application is shutting down...
2024-01-08 01:17:03.899 +03:00 [INF] Executed DbCommand (141ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-08 01:17:04.208 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-08 01:17:04.475 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-08 01:17:04.476 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-08 01:17:04.480 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 01:17:04.481 +03:00 [INF] Hosting environment: Development
2024-01-08 01:17:04.483 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-08 01:19:09.773 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:19:10.821 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:19:10.871 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:19:11.224 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:19:12.144 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:19:12.391 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:19:12.424 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 1542.1597ms
2024-01-08 01:19:12.428 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:19:12.452 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 2688.3451ms
2024-01-08 01:19:23.594 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:19:23.601 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:19:23.604 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:19:23.610 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:19:23.667 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:19:23.670 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 63.362ms
2024-01-08 01:19:23.672 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:19:23.674 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 80.0831ms
2024-01-08 01:20:43.000 +03:00 [INF] Application is shutting down...
2024-01-08 01:20:57.442 +03:00 [INF] Executed DbCommand (337ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-08 01:20:58.334 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-08 01:20:58.723 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-08 01:20:58.725 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-08 01:20:58.730 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 01:20:58.733 +03:00 [INF] Hosting environment: Development
2024-01-08 01:20:58.735 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-08 01:21:01.205 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:21:02.646 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:21:02.718 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:21:03.237 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:21:05.020 +03:00 [INF] Executed DbCommand (61ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:21:05.586 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:21:05.701 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 2952.8057ms
2024-01-08 01:21:05.705 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:21:05.768 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 4572.2266ms
2024-01-08 01:21:17.181 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:21:17.186 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:21:17.187 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:21:17.192 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:21:17.231 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:21:17.233 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 43.991ms
2024-01-08 01:21:17.234 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:21:17.236 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 54.2830ms
2024-01-08 01:21:22.284 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:21:22.293 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:21:22.294 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:21:22.299 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:21:22.309 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:21:22.310 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 13.7968ms
2024-01-08 01:21:22.311 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:21:22.312 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 28.3328ms
2024-01-08 01:21:23.260 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:21:23.261 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:21:23.262 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:21:23.264 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:21:23.270 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:21:23.274 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 9.8069ms
2024-01-08 01:21:23.275 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:21:23.276 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 16.6012ms
2024-01-08 01:22:25.298 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:22:25.301 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:22:25.306 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:22:25.309 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:22:25.404 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:22:25.415 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:22:25.418 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 109.5948ms
2024-01-08 01:22:25.419 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:22:25.420 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 122.3071ms
2024-01-08 01:22:34.168 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:22:34.174 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:22:34.177 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:22:34.181 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:22:34.197 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:22:34.200 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 19.1559ms
2024-01-08 01:22:34.202 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:22:34.206 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 37.0218ms
2024-01-08 01:25:37.969 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:25:37.970 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:25:37.971 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:25:37.974 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:25:37.989 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:25:37.996 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:25:37.997 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 23.1874ms
2024-01-08 01:25:37.998 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:25:37.999 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 29.7904ms
2024-01-08 01:25:53.003 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:25:53.005 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:25:53.008 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:25:53.010 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:25:53.016 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:25:53.019 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 9.9519ms
2024-01-08 01:25:53.021 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:25:53.022 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 19.8622ms
2024-01-08 01:26:20.985 +03:00 [INF] Application is shutting down...
2024-01-08 01:26:32.259 +03:00 [INF] Executed DbCommand (134ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-08 01:26:32.804 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-08 01:26:33.219 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-08 01:26:33.226 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-08 01:26:33.234 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 01:26:33.240 +03:00 [INF] Hosting environment: Development
2024-01-08 01:26:33.280 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-08 01:26:35.002 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:26:37.033 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:26:37.141 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:26:37.843 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:26:39.424 +03:00 [INF] Executed DbCommand (47ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:26:39.906 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:26:39.977 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 2819.5122ms
2024-01-08 01:26:39.985 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:26:40.038 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 5041.8792ms
2024-01-08 01:26:49.952 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:26:49.958 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:26:49.960 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:26:49.964 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:26:50.003 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:26:50.005 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 42.663ms
2024-01-08 01:26:50.006 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:26:50.010 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 58.1666ms
2024-01-08 01:27:06.057 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:27:06.062 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:27:06.064 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:27:06.070 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:27:06.078 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:27:06.079 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 13.9834ms
2024-01-08 01:27:06.081 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:27:06.083 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 25.7814ms
2024-01-08 01:34:21.170 +03:00 [INF] Application is shutting down...
2024-01-08 01:34:35.903 +03:00 [INF] Executed DbCommand (115ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2024-01-08 01:34:36.271 +03:00 [INF] User profile is available. Using 'C:\Users\amir-\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-08 01:34:36.519 +03:00 [INF] Now listening on: https://localhost:7124
2024-01-08 01:34:36.520 +03:00 [INF] Now listening on: http://localhost:5124
2024-01-08 01:34:36.524 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-08 01:34:36.525 +03:00 [INF] Hosting environment: Development
2024-01-08 01:34:36.526 +03:00 [INF] Content root path: D:\ca-dotnet\ca-layered-aspnet-core\NotesWebApi\Notes.WebApi\
2024-01-08 01:34:41.411 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:34:42.218 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:34:42.258 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:34:42.537 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:34:43.384 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:34:43.635 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:34:43.665 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 1395.3685ms
2024-01-08 01:34:43.667 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:34:43.689 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 2280.9429ms
2024-01-08 01:34:50.725 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:34:50.731 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:34:50.732 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:34:50.735 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:34:50.770 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:34:50.773 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 38.8745ms
2024-01-08 01:34:50.774 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:34:50.777 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 51.8655ms
2024-01-08 01:35:06.883 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:35:06.888 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:35:06.889 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:35:06.894 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:35:06.903 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:35:06.906 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 14.1853ms
2024-01-08 01:35:06.908 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:35:06.909 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 26.6802ms
2024-01-08 01:35:43.806 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:35:43.808 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:35:43.812 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:35:43.814 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:35:43.892 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT n."NoteId", n."Title"
FROM notes AS n
WHERE lower(n."UserId"::text) = @__ToLower_0
2024-01-08 01:35:43.902 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:35:43.905 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 91.296ms
2024-01-08 01:35:43.906 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:35:43.907 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 100.7347ms
2024-01-08 01:35:49.345 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:35:49.347 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:35:49.348 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:35:49.350 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:35:49.359 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:35:49.360 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 10.0847ms
2024-01-08 01:35:49.361 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:35:49.362 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 17.0375ms
2024-01-08 01:36:05.152 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:36:05.153 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:36:05.154 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:36:05.157 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:36:05.164 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:36:05.166 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 9.9333ms
2024-01-08 01:36:05.170 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:36:05.172 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 20.0067ms
2024-01-08 01:36:27.649 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:36:27.651 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:36:27.654 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:36:27.657 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:36:27.663 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:36:27.665 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 8.519ms
2024-01-08 01:36:27.669 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:36:27.671 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 21.6637ms
2024-01-08 01:36:49.911 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7124/api/1/Note - -
2024-01-08 01:36:49.913 +03:00 [INF] Executing endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:36:49.915 +03:00 [INF] Route matched with {action = "GetAll", controller = "Note"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Notes.Application.Notes.Queries.GetNoteList.NoteListVm]] GetAll() on controller Notes.WebApi.Controllers.NoteController (Notes.WebApi).
2024-01-08 01:36:49.918 +03:00 [INF] Notes Request: GetNoteListQuery "5457eece-211b-4752-974e-1615a7e1a153" {"UserId":"5457eece-211b-4752-974e-1615a7e1a153","$type":"GetNoteListQuery"}
2024-01-08 01:36:49.925 +03:00 [INF] Executing OkObjectResult, writing value of type 'Notes.Application.Notes.Queries.GetNoteList.NoteListVm'.
2024-01-08 01:36:49.928 +03:00 [INF] Executed action Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi) in 10.1449ms
2024-01-08 01:36:49.929 +03:00 [INF] Executed endpoint 'Notes.WebApi.Controllers.NoteController.GetAll (Notes.WebApi)'
2024-01-08 01:36:49.931 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7124/api/1/Note - - - 200 - application/json;+charset=utf-8 20.2662ms
2024-01-08 01:39:31.889 +03:00 [INF] Application is shutting down...
